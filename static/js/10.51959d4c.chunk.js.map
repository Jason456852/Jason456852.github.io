{"version":3,"file":"static/js/10.51959d4c.chunk.js","mappings":"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","sources":["components/myProjects/projectInfo.js","components/myProjects/myProjects.js"],"sourcesContent":["export const projectInfo = [\r\n    {\r\n        name: \"Canadian Refrigeration Simple Homepage\",\r\n        description: \r\n        \"Explore my latest project, the company webpage, where I've showcased my expertise in HTML, CSS, and JavaScript. As a testament to continuous learning and improvement, I've integrated TailwindCSS to elevate the design and functionality. Dive in and witness firsthand the fusion of skill and innovation!\",\r\n        languages: \"HTML, CSS, JavaScript, TailwindCSS\",\r\n        link: {\r\n            isIframe: true,\r\n            src: \"https://canadianrefrigeration.github.io\"\r\n        }\r\n    },\r\n];","import { Box, Grow, Grid, Typography } from \"@mui/material\";\r\nimport { uni_font_color, uni_font_color_sub_1, uni_font_family } from \"../constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setCurrentPage } from \"../../redux/globalSlice\";\r\nimport { projectInfo } from \"./projectInfo\";\r\n\r\nconst MyProjects = () => {\r\n    const dispatch = useDispatch();\r\n    const currentPage = useSelector(state => state.global.currentPage);\r\n    const screenWidth = useSelector(state => state.global.screenWidth);\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentPage(1));\r\n    })\r\n\r\n    if (screenWidth <= 800) {\r\n        return (\r\n            <Grow\r\n                in={currentPage.index === 1}\r\n                style={{ transformOrigin: '0 0 0' }}\r\n                {...(currentPage.index === 1 ? { timeout: 300 } : {})}\r\n            >\r\n                <Box sx={{ maxWidth: \"100%\" }}>\r\n                    {projectInfo.map((project, index) => <>\r\n                        <Typography gutterBottom sx={{ fontFamily: uni_font_family, color: uni_font_color }}>{project.name}</Typography>\r\n                        <Typography gutterBottom sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>{project.description}</Typography>\r\n                        <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>Languages & Library</Typography>\r\n                        <Typography gutterBottom sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>{project.languages}</Typography>\r\n                        {project.link.isIframe ?\r\n                            <iframe style={{ minHeight: 600, borderWidth: 2, borderColor: uni_font_color, width: '100%', height: '100%', overflow:'hidden' }} src={project.link.src} /> :\r\n                            <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color }}>{project.name}</Typography>}\r\n                    </>)}\r\n                </Box>\r\n            </Grow>\r\n        );\r\n    } else {\r\n        return (\r\n            <Grow\r\n                in={currentPage.index === 1}\r\n                style={{ transformOrigin: '0 0 0' }}\r\n                {...(currentPage.index === 1 ? { timeout: 300 } : {})}\r\n            >\r\n                <Grid container sx={{ margin: \"0 auto\" }}>\r\n                    {projectInfo.map((project, index) => <>\r\n                        <Grid item xs={index % 2 === 0 ? 7 : 5}>\r\n                            <Grid container columnSpacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography gutterBottom sx={{ fontFamily: uni_font_family, color: uni_font_color }}>{projectInfo[index].name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>{projectInfo[index].description}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>Languages & Library</Typography>\r\n                                    <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color_sub_1 }}>{projectInfo[index].languages}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={index % 2 === 1 ? 7 : 5} minHeight={600}>\r\n                            {project.link.isIframe ? <iframe style={{ borderWidth: 2, borderColor: uni_font_color, width: '100%', height: '100%' }} src={project.link.src} /> : <Typography sx={{ fontFamily: uni_font_family, color: uni_font_color }}>{projectInfo[index].name}</Typography>}\r\n                        </Grid>\r\n                    </>)}\r\n                </Grid>\r\n            </Grow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProjects;"],"names":["projectInfo","name","description","languages","link","isIframe","src","MyProjects","dispatch","useDispatch","currentPage","useSelector","state","global","screenWidth","useEffect","setCurrentPage","_jsx","Grow","in","index","style","transformOrigin","timeout","children","Box","sx","maxWidth","map","project","_jsxs","_Fragment","Typography","gutterBottom","fontFamily","uni_font_family","color","uni_font_color","uni_font_color_sub_1","minHeight","borderWidth","borderColor","width","height","overflow","Grid","container","margin","item","xs","columnSpacing"],"sourceRoot":""}